{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","Hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","newCategory","useState","userImput","setuserImput","onSubmit","event","preventDefault","length","category","type","value","onChange","target","getGifs","Category","a","url","encodeURI","fetch","resp","json","data","gifs","map","anyGifs","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","img","setTimeout","useFetchGif","calssName","image","GifExpertApp","categories","setcategory","categoria","ReactDOM","render","document","getElementById"],"mappings":"mMA4CeA,EAxCK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAElB,EAAkCC,mBAAS,SAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAiBA,OAEQ,sBAAMC,SAbO,SAACC,GAClBA,EAAMC,iBACHJ,EAAUK,OAAO,IAErBP,GAAY,SAACQ,GAAD,OAAaN,GAAb,mBAA2BM,OACvCL,EAAa,MAQR,SACI,uBACIM,KAAM,OACNC,MAASR,EACTS,SArBI,SAACN,GACjBF,EAAaE,EAAMO,OAAOF,a,uBCP5BG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAENC,EAFM,iDAE2CC,UAAUH,GAFrD,sDAGOI,MAAMF,GAHb,cAGNG,EAHM,gBAKQA,EAAKC,OALb,uBAKLC,EALK,EAKLA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GACjB,MAAO,CACHC,GAAID,EAAQC,GACZC,MAAOF,EAAQE,MACfV,IAAMQ,EAAQG,OAAOC,iBAAiBZ,QAXnC,kBAiBLM,GAjBK,4CAAH,sDAsBGT,ICRDgB,EAbK,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAOV,EAAQ,EAARA,IAGzB,OACI,sBAAKc,UAAW,yCAAhB,UACE,qBAAKC,IAAOf,EAAKgB,IAAON,IACxB,4BAAIA,QCqCCO,EApCC,SAAC,GAAe,IAAdnB,EAAa,EAAbA,SAMd,ECXuB,SAACA,GAExB,MAA0Bb,mBAAS,CAC/BoB,KAAO,GACPa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAlBAC,qBAAU,WAENxB,EAAQC,GACPwB,MAAK,SAAAC,GACFC,YAAY,WACRJ,EAAS,CACLf,KAAMkB,EACNL,SAAU,MAGf,WAMT,CAACpB,IAEIqB,EDdwBM,CAAY3B,GAA/Ba,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAIpB,OACK,qCACE,oBAAIQ,UAAU,wCAAd,SAAuD5B,IAEtDoB,GAAS,mBAAGJ,UAAU,mCAAb,wBAEP,qBAAKA,UAAY,YAAjB,SAEMH,EAAOJ,KAAI,SAAAoB,GAAK,OAEV,cAAC,EAAD,CACE3B,IAAM2B,EAAM3B,IACZU,MAAQiB,EAAMjB,iBEgB3BkB,EAzCM,WAIjB,MAAgC3C,mBAAS,CAAC,mBAA1C,mBAAK4C,EAAL,KAAiBC,EAAjB,KAQA,OACI,qCACE,8CACA,cAAC,EAAD,CAAa9C,YAAa8C,IAC1B,uBAIA,6BAEMD,EAAWtB,KAAI,SAACwB,GACZ,OACA,cAAC,EAAD,CAEQjC,SAAWiC,GADJA,Y,MCzBnCC,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.952a4d81.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({newCategory}) => {\r\n\r\n    const [userImput, setuserImput] = useState(\"punch\");\r\n\r\n    const HandleImput = (event)=> {\r\n        setuserImput(event.target.value);\r\n    }\r\n\r\n    const HandleSubmit = (event)=>{\r\n        event.preventDefault();\r\n        if(userImput.length>2){\r\n       // setcategory(()=> [...category, \"value\"]);, para reemplazar esto del otro componente hago:\r\n       newCategory((category)=>[userImput, ...category]);\r\n       setuserImput(\"\");\r\n        }\r\n\r\n \r\n    }\r\n\r\n    return (\r\n        \r\n            <form onSubmit = {HandleSubmit}>\r\n                <input\r\n                    type= \"text\" \r\n                    value = {userImput}\r\n                    onChange= {HandleImput}\r\n\r\n                />\r\n\r\n            </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    newCategory: PropTypes.func.isRequired,\r\n\r\n};\r\n\r\n\r\nexport default AddCategory\r\n\r\n\r\n{/* <button onClick= {HandleApp}>New element </button> */}\r\n\r\n","\r\n\r\nconst getGifs = async(Category)=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(Category) }&api_key=u2rt7gbqyRUcgdyfNl8jOiEiiJWuLat1`\r\n    const resp = await fetch(url);\r\n\r\n    const {data} =await resp.json();\r\n\r\n    const gifs = data.map(anyGifs =>{\r\n         return({\r\n             id: anyGifs.id,\r\n             title: anyGifs.title,\r\n             url : anyGifs.images.downsized_medium.url,\r\n\r\n\r\n         })\r\n    })\r\n\r\n    return(gifs);\r\n    \r\n   \r\n }\r\n\r\n export default getGifs;\r\n","import React from 'react'\r\n\r\n\r\nconst GifGridItem = ({title, url})=> {\r\n\r\n\r\n    return (\r\n        <div className= \"card animate__animated animate__bounce\">\r\n          <img src = {url} alt = {title} />\r\n          <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n \r\n\r\nexport default GifGridItem\r\n","\r\nimport React  from 'react'\r\nimport { useFetchGif } from '../Hooks/useFetchGif'\r\n\r\n\r\nimport GifGridItem from './GifGridItem'\r\n\r\n\r\n\r\n\r\nconst GifGrid = ({Category})=> {\r\n\r\n    // const [images , setImages] = useState([])\r\n\r\n \r\n\r\n    const {data:images, loading} = useFetchGif(Category);\r\n\r\n\r\n    \r\n    return (\r\n         <>\r\n           <h3 calssName=\"animate__animated animate__fadeInLeft\">{Category}</h3>\r\n\r\n           {loading&&<p className=\"animate__animated animate__flash\">loading...</p>}\r\n\r\n              <div className = \"card-grid\">\r\n                {\r\n                    images.map(image =>\r\n                        (\r\n                          <GifGridItem\r\n                            url= {image.url}\r\n                            title ={image.title} \r\n\r\n                            />\r\n\r\n                        )\r\n                    )\r\n                }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from \"react\";\r\nimport getGifs from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGif = (Category)=>{\r\n\r\n    const [state, setstate] = useState({\r\n        data : [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(Category)\r\n        .then(img =>{\r\n            setTimeout (()=>{\r\n                setstate({\r\n                    data: img,\r\n                    loading : false\r\n                });\r\n                 \r\n            }, 1500);\r\n\r\n        })}\r\n            \r\n       \r\n     \r\n    , [Category]);\r\n\r\n    return state;\r\n} \r\n\r\n","import React, {useState} from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\n// import PropTypes from 'prop-types'\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    // const categories = ['programming', 'finances', 'sports'];\r\n\r\n    let [categories, setcategory] = useState(['Peaky Blinders']);\r\n\r\n    // const HandleApp = ()=>{\r\n    //         // setcategory ([...category, \"value\"]);\r\n    //         setcategory(()=> [...category, \"value\"]);\r\n    // }\r\n    \r\n\r\n    return (\r\n        <>\r\n          <h2>GifExpertApp</h2>\r\n          <AddCategory newCategory={setcategory} />\r\n          <hr />\r\n            \r\n            \r\n          \r\n          <ol>\r\n                {\r\n                categories.map((categoria)=>{\r\n                    return(\r\n                    <GifGrid \r\n                            key = {categoria}\r\n                            Category= {categoria}\r\n                    /> \r\n                    );\r\n                })\r\n                }\r\n\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n// GifExpertApp.propTypes = {\r\n\r\n// }\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n  <GifExpertApp/>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}